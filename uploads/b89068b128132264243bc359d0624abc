

//var args = process.argv.splice(2);

var mongoUrl = "mongodb://120.25.64.112:27017/ZhiBoYi";
var groupSize = 1000;
var P = 20, V = 0;


var Bmob = require('bmob').Bmob;
var logger = require("winston");
Bmob.initialize("6fd2398eaea47ceed6a9e7a2bf5bc963", "59d66beeeb07f157b0308981365bebb3");
var co = require("co");
var MongoClient = require("mongodb").MongoClient;
var later = require("later");
var mongo;


var TryInsert = co.wrap(function * (tableName, data) {

	var query = {_id :  data._id };
	var doc = yield mongo.collection(tableName).find(query).toArray();

	if (doc.length == 0) {
		//logger.info("insert", data._id);
		yield mongo.collection(tableName).insert(data);	
	} else {
		//logger.info("update", data._id);
		yield mongo.collection(tableName).update(query, data);
	}
});


var sched = later.parse.recur().every(1).hour().first();


var updateBackUp = co.wrap(function * (query, skip) {
	var range = skip.toString() + "~" + (skip + groupSize).toString();  

	logger.info(range + ": " + "find....");	

	query.skip(skip);

	var users = yield query.find();

	range = skip.toString() + "~" + (skip + users.length).toString();
	
	logger.info(range + ": " + "find done");

	var DoUpdate = new Array();

	for(var i =0 ;i < users.length; i++){
		var data = users[i].attributes;
		data.password = users[i].get("username");
		data.updatedAt = users[i].updatedAt;
		data.createdAt = users[i].createdAt;
		data._id = users[i].id;

		DoUpdate[i] = TryInsert("User", data);

		//yield mongo.collection("User").insert(data);
	}
	logger.info(range + ": DoUpdate.....");
	yield DoUpdate;
	logger.info(range + ": DoUpdate Done");
});

var maintain = co.wrap(function*() {
	logger.info("Conect to Mongo");
	mongo = yield MongoClient.connect(mongoUrl);
	logger.info("Connect Success");

	var USER = Bmob.User;
	var query = new Bmob.Query(USER);
	query.limit(groupSize);

	query.ascending("objectId");

	logger.info("Get total user amount");
	var total = yield query.count();
	var group = total / groupSize;

	var send = 0;

	var start = Date.now();
	logger.info("ZhiBo total user: " + total);

	var querys = new Array();
	for (var turn = 0; turn <= group; ++turn) {
		querys[turn] = updateBackUp(query, turn * groupSize);
		//var users = yield query.find();
		//var DoUpdate = new Array();
		//for(var i =0 ;i < users.length; i++){
			//var data = users[i].attributes;
			//data.password = users[i].get("username");
			//data.updatedAt = users[i].updatedAt;
			//data.createdAt = users[i].createdAt;
			//data._id = users[i].id;
//
			//DoUpdate[i] = TryInsert("User", data);
//
			////yield mongo.collection("User").insert(data);
		//}
		//yield DoUpdate;
		//send += users.length;
		//logger.info("Remain: " + (total - send));
	}
	yield querys;
	var end = Date.now();
	logger.info("Time Cost: ",end - start, "ms");
	return "Success";
});


later.setInterval(co(function * () { return yield maintain(); }).then(function (data) { logger.info(data); mongo.close(); }), sched);


